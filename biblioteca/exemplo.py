#!/usr/bin/env python3
"""
Exemplo de uso do Sistema de Biblioteca Digital
Este arquivo demonstra como utilizar as funcionalidades do sistema programaticamente
"""

from livro import Livro
from usuario import Usuario
from fila import Fila
from pilha import Pilha
from bst import BST
from grafo import Grafo

def exemplo_uso():
    print("=== DEMONSTRA√á√ÉO DO SISTEMA DE BIBLIOTECA ===\n")
    
    # Inicializa√ß√£o das estruturas
    livros_lista = []
    usuarios_hash = {}
    historico_pilha = Pilha()
    livros_bst = BST()
    grafo_recomendacoes = Grafo()
    filas_emprestimo = {}
    
    print("1. CADASTRANDO LIVROS...")
    # Cadastro de livros
    livros_dados = [
        ("1984", "George Orwell", "L001"),
        ("Dom Casmurro", "Machado de Assis", "L002"),
        ("O Corti√ßo", "Alu√≠sio Azevedo", "L003"),
        ("Fahrenheit 451", "Ray Bradbury", "L004"),
        ("Neuromancer", "William Gibson", "L005")
    ]
    
    for titulo, autor, codigo in livros_dados:
        livro = Livro(titulo, autor, codigo)
        livros_lista.append(livro)
        livros_bst.inserir(livro)
        filas_emprestimo[codigo] = Fila()
        grafo_recomendacoes.adicionar_livro(codigo)
        historico_pilha.empilhar(("livro", livro))
        print(f"   ‚úì {livro}")
    
    print(f"\nTotal de livros cadastrados: {len(livros_lista)}")
    
    print("\n2. CADASTRANDO USU√ÅRIOS...")
    # Cadastro de usu√°rios
    usuarios_dados = [
        ("Ana Silva", "U001"),
        ("Carlos Santos", "U002"),
        ("Maria Oliveira", "U003"),
        ("Jo√£o Costa", "U004")
    ]
    
    for nome, id_usuario in usuarios_dados:
        usuario = Usuario(nome, id_usuario)
        usuarios_hash[id_usuario] = usuario
        historico_pilha.empilhar(("usuario", usuario))
        print(f"   ‚úì {usuario}")
    
    print(f"\nTotal de usu√°rios cadastrados: {len(usuarios_hash)}")
    
    print("\n3. TESTANDO BUSCA DE LIVROS...")
    # Teste de busca
    busca_teste = "1984"
    livro_encontrado = livros_bst.buscar(busca_teste)
    if livro_encontrado:
        print(f"   ‚úì Livro encontrado: {livro_encontrado}")
    else:
        print(f"   ‚úó Livro '{busca_teste}' n√£o encontrado")
    
    print("\n4. SIMULANDO EMPR√âSTIMOS...")
    # Simula√ß√£o de empr√©stimos
    emprestimos = [
        ("U001", "L001"),  # Ana pega 1984
        ("U002", "L001"),  # Carlos quer 1984 (vai para fila)
        ("U003", "L002"),  # Maria pega Dom Casmurro
        ("U001", "L002"),  # Ana quer Dom Casmurro (vai para fila)
        ("U004", "L003"),  # Jo√£o pega O Corti√ßo
    ]
    
    for id_usuario, codigo_livro in emprestimos:
        usuario = usuarios_hash.get(id_usuario)
        fila = filas_emprestimo.get(codigo_livro)
        if usuario and fila:
            fila.enfileirar(usuario)
            livro = next((l for l in livros_lista if l.codigo == codigo_livro), None)
            print(f"   ‚úì {usuario.nome} entrou na fila para '{livro.titulo}'")
            # Adiciona rela√ß√£o no grafo para recomenda√ß√µes
            for outro_codigo in filas_emprestimo:
                if outro_codigo != codigo_livro and not filas_emprestimo[outro_codigo].vazio():
                    grafo_recomendacoes.adicionar_relacao(codigo_livro, outro_codigo)
    
    print("\n5. VERIFICANDO FILAS DE EMPR√âSTIMO...")
    for codigo, fila in filas_emprestimo.items():
        if not fila.vazio():
            livro = next((l for l in livros_lista if l.codigo == codigo), None)
            print(f"   üìö {livro.titulo}: {len(fila)} usu√°rio(s) na fila")
            for i, usuario in enumerate(fila.itens, 1):
                print(f"      {i}¬∫ - {usuario.nome}")
    
    print("\n6. SIMULANDO DEVOLU√á√ïES...")
    # Simula√ß√£o de devolu√ß√µes
    for codigo in ["L001", "L002"]:
        fila = filas_emprestimo[codigo]
        if not fila.vazio():
            usuario = fila.desenfileirar()
            livro = next((l for l in livros_lista if l.codigo == codigo), None)
            print(f"   ‚úì {usuario.nome} retirou '{livro.titulo}'")
    
    print("\n7. TESTANDO RECOMENDA√á√ïES...")
    # Teste de recomenda√ß√µes
    codigo_teste = "L001"
    recomendados = grafo_recomendacoes.recomendar(codigo_teste)
    livro_ref = next((l for l in livros_lista if l.codigo == codigo_teste), None)
    print(f"   üìñ Usu√°rios que pegaram '{livro_ref.titulo}' tamb√©m se interessaram por:")
    for cod in recomendados:
        livro = next((l for l in livros_lista if l.codigo == cod), None)
        if livro:
            print(f"      ‚Ä¢ {livro.titulo}")
    
    print("\n8. LISTANDO LIVROS ORDENADOS...")
    print("   üìö Acervo completo (ordem alfab√©tica):")
    for livro in livros_bst.em_ordem():
        print(f"      ‚Ä¢ {livro}")
    
    print("\n9. TESTANDO FUNCIONALIDADE DESFAZER...")
    print(f"   A√ß√µes no hist√≥rico: {len(historico_pilha)}")
    if not historico_pilha.vazio():
        ultima_acao = historico_pilha.desempilhar()
        print(f"   ‚Ü∂ Desfazendo: {ultima_acao[0]} - {ultima_acao[1]}")
    
    print("\n=== DEMONSTRA√á√ÉO CONCLU√çDA ===")
    print("Para uso interativo, execute: python main.py")

if __name__ == "__main__":
    exemplo_uso()
